import streamlit as st
from ultralytics import YOLO
import tempfile
import cv2
import os
import subprocess

st.title("üê± Cat Detector (Upload MP4)")
st.write("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå MP4 ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÅ‡∏°‡∏ß‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏î Bounding Boxes ‡πÉ‡∏´‡πâ‡∏î‡∏π")

# Upload video
uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå MP4 ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", type=["mp4"])

if uploaded_file:
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    temp_video_path = tempfile.NamedTemporaryFile(delete=False, suffix=".mp4").name
    with open(temp_video_path, "wb") as f:
        f.write(uploaded_file.read())

    st.success("‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

    # ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• YOLO
    model = YOLO("yolo11n.pt")

    # ‡∏≠‡πà‡∏≤‡∏ô video
    cap = cv2.VideoCapture(temp_video_path)
    fps = cap.get(cv2.CAP_PROP_FPS)
    width, height = int(cap.get(3)), int(cap.get(4))

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ö frames
    frames_dir = tempfile.mkdtemp()
    frame_index = 0
    frame_interval = int(fps)  # ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

    st.write("üêæ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÅ‡∏°‡∏ß‡πÉ‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠...")

    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            break

        if frame_index % frame_interval == 0:
            results = model.predict(source=frame, conf=0.3, verbose=False)
            annotated_frame = results[0].plot()
        else:
            annotated_frame = frame

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å frame ‡πÄ‡∏õ‡πá‡∏ô PNG
        frame_path = os.path.join(frames_dir, f"frame{frame_index:05d}.png")
        cv2.imwrite(frame_path, annotated_frame)
        frame_index += 1

    cap.release()

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á video ‡∏ú‡πà‡∏≤‡∏ô ffmpeg
    output_path = tempfile.NamedTemporaryFile(delete=False, suffix=".mp4").name
    subprocess.run([
        "ffmpeg", "-y",
        "-framerate", str(int(fps)),
        "-i", os.path.join(frames_dir, "frame%05d.png"),
        "-c:v", "libx264",
        "-pix_fmt", "yuv420p",
        output_path
    ])

    st.success("‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")
    st.video(output_path)
